@inherits UmbracoViewPage<NextEvents>
@using LocalGovUmbraco.Events
@using LocalGovUmbraco.PropertyEditors.EventInstances
@{
  int depth = (ViewData.GetValue("depth") as int?) ?? 0;
  Queue<EventInstance> events = new((Model.Archive?.Children<Event>().EmptyNull().SelectMany(x => (x.Dates?.Upcoming.Select(_ => new EventInstance(x, _.Start, _.End))).EmptyNull()).Take(Model.Count > 0 ? Model.Count : 3)).EmptyNull());
}
@if (!Model.Heading.IsNullOrWhiteSpace())
{
  <heading level="@(2 + depth++)" class="heading">@Model.Heading</heading>
}
<div class="article-wrapper">
  @if (events.Any())
  {
    foreach (EventInstance eventInstance in events)
  {
      <partial name="Teaser" model="eventInstance.Content" view-data="new(ViewData)" view-data-depth="depth" view-data-show-excerpt="Model.ShowExcerpts" view-data-show-date="Model.ShowDate" view-data-show-image="Model.ShowImages" view-data-show-read-more="Model.ShowReadMore" />
    }
  }
  else
  {
    <p class="no-results">There are no upcoming events.</p>
  }
</div>

@if (Model.ShowArchiveLink && Model.Archive is Archive archive) {
  <div class="archive-link">
    <a href="@archive.Url()">@Model.ArchiveLabel.IfNullOrWhiteSpace(archive.Name)</a>
  </div>
}
