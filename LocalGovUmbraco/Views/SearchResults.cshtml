@using Examine;
@using Examine.Search;
@using Umbraco.Cms.Core.Models.Blocks;
@using Umbraco.Cms.Infrastructure.Examine;
@inherits UmbracoViewPage<SearchResults>
@inject IExamineManager examineManager;
@inject IShortStringHelper shortStringHelper;
<section id="search-results" class="max-width article-list">
  @{
    int perPage = 12;
    IExamineValue[] searchParameters = Context.Request.Query.GetSearchRequest("query");
    if (searchParameters.Any())
    {
      IEnumerable<ISearchResult> results = examineManager.GetSearchResults(searchParameters, new[] { "nodeName", "metaDesc", "body" }, new[] { "IndexPage", "SearchResults" });
      if (Model.IncludeMedia)
      {
        results = results.Concat(examineManager.GetSearchResults(searchParameters, new[] { "nodeName" }, indexType: IndexTypes.Media));
      }

      IEnumerable<IPublishedContent> items = results.OrderByDescending(x => x.Score).Select(x => x.Values["__IndexType"] switch
      {
        IndexTypes.Content => Umbraco.Content(x.Id),
        IndexTypes.Media => Umbraco.Media(x.Id),
        _ => null,
      }).WhereNotNull().Where(x => (x is Main content && content.TemplateId > 0) || x is UmbracoMediaArticle || (x is Redirect redirect && redirect.Destination?.Type == LinkType.External));

      if (items.Any())
      {
        <p>@items.Count() total results for <strong>@searchParameters.ToString(" ")</strong>.</p>

        foreach (IPublishedContent item in Context.Request.Paginate<IPublishedContent>(items, perPage))
        {
          <article class="@item.Name.Slug() @shortStringHelper.SplitPascalCasing(@item.ContentType.Alias, ' ').Slug()">
            <h2 class="heading"><a href="@item.Url()">@item.Name</a></h2>
            <small><a href="@item.Url()">@item.Url()</a></small>
            @if (item.Value("body") is Umbraco.Cms.Core.Models.Blocks.BlockGridModel body)
            {
              string[] snippetParams = searchParameters.Select(x => x.Value).ToArray();
              string snippet = Html.GetBlockGridHtml(body, "snippet").PlainText().Snippet(350, snippetParams);
              if (!snippet.IsNullOrWhiteSpace())
              {
                <p>
                  @snippet.Highlight(snippetParams.Where(x => x.Length > 3).ToArray());
                </p>
              }

            }
            else if (item.Value("metaDesc") is string metadesc && !metadesc.IsNullOrWhiteSpace())
            {
              <p>
                @metadesc;
              </p>
            }
          </article>
        }

        <pagination count="items.Count()" context="Context.Request" perPage="perPage"></pagination>
      }
      else
      {
        <p class="no-results">There were no results for your query &mdash; <strong>@searchParameters.ToString(" ")</strong>. Please adjust your query and try again.</p>
      }
    }
    else
    {
      <p class="no-query">Please enter a search query in the search box.</p>
    }
  }
</section>
